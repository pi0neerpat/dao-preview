name: CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]

jobs:
  runCI:
    name: Run CI
    runs-on: ubuntu-latest
    steps:
      # check out this repo (so that this workflow can use it)
      # https://github.com/actions/checkout
      - uses: actions/checkout@v2
      # set up a node environment
      # https://github.com/actions/setup-node
      - name: Setup Node.js v14
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      # cache dependencies and build outputs to improve workflow execution time
      # https://github.com/actions/cache
      - name: Cache "node_modules"
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: node_modules_${{ hashFiles('**/yarn.lock') }}
      # install dependencies
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      # lint, check, run tests, and build
      # - name: Run CI
      #   uses: jtoar/redwoodjs-ci@v0.2.0
      - name: Lint
        run: yarn rw lint
        shell: bash
      - name: Check
        run: yarn rw check
        shell: bash
      # TODO: Inject DATABASE_URL for testing
      # - name: Run tests
      #   run: yarn rw test
      #   shell: bash
      - name: Build packages
        run: yarn build-packages
        shell: bash
      - name: Build
        run: yarn rw build
        shell: bash
      # - name: Check serverless size
      #   run: yarn zip-it-and-ship-it api/dist/functions/ zipped
      #   shell: bash
      # TODO: throw error if size exceeds limit
